variables:
  OKD_PROJECT: TEMPLATE_SUBSTITUTE_PROJECT_NAME
  OKD_PRODUCTION_SERVER_HOSTNAME: okd.private.teh-1.snappcloud.io
  OKD_STAGING_SERVER_HOSTNAME: okd.private.ts-1.staging-snappcloud.io

stages:
  - label
  - testenv
  - syntax
  - sanity
  - deploy-staging
  - dry-run
  - deploy-production

default:
  image:
    name: $CI_REGISTRY_IMAGE:latest
  before_script:
    - whoami

label-MR:
  stage: label
  before_script:
    - git fetch origin master
    - msg=""
  script:
    - ./test/label.sh
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      when: always


build-testenv:
  stage: testenv
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:latest test
    - docker push $CI_REGISTRY_IMAGE:latest
  retry:
    max: 2
    when: runner_system_failure
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master" 
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /\[notestenv\]/
      when: never
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - Dockerfile
      when: on_success
    - if: $CI_COMMIT_MESSAGE =~ /\[testenv\]/
      when: on_success



syntax-verify:
  stage: syntax
  script:
    - ./test/syntax.sh
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      when: on_success

sanity-check:
  stage: sanity
  script:
    - ./test/sanity.sh
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      when: on_success

.dry-run:
  stage: dry-run
  script:
    - ./tests/dry-run.sh
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      when: on_success

.deploy-staging:
  stage: deploy-staging
  image: openshift/origin-cli
  script:
    - oc version
    - oc login https://${OKD_STAGING_SERVER_HOSTNAME} --token="${GITLAB_STAGING_OKD_TOKEN}"
    - oc project ${OKD_PROJECT}
    - oc start-build ${CI_PROJECT_NAME}
  only:
    refs:
      - master

.deploy-production:
  stage: deploy-proudction
  image: openshift/origin-cli
  script:
    - oc version
    - oc login https://${OKD_PRODUCTION_SERVER_HOSTNAME} --token="${GITLAB_PRODUCTION_OKD_TOKEN}"
    - oc project ${OKD_PROJECT}
    - oc start-build ${CI_PROJECT_NAME}
  only:
    refs:
      - master