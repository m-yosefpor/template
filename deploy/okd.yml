apiVersion: v1
kind: Template
parameters:
  - name: PROJECT_NAME
    value: TEMPLATE_SUBSTITUTE_PROJECT_NAME
  - name: GIT_URL
    value: TEMPLATE_SUBSTITUTE_PROJECT_GIT
  - name: DAEMON_PORT
    value: 8080

objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${PROJECT_NAME}

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${PROJECT_NAME}
    name: ${PROJECT_NAME}
  spec:
    replicas: 1
    selector:
      app: ${PROJECT_NAME}
      deploymentconfig: ${PROJECT_NAME}
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${PROJECT_NAME}
          deploymentconfig: ${PROJECT_NAME}
      spec:
        containers:
        - name: ${PROJECT_NAME}
          image: ' '
          ports:
          - containerPort: ${DAEMON_PORT}
            protocol: TCP
        serviceAccount: ${PROJECT_NAME}
        serviceAccountName: ${PROJECT_NAME}
        restartPolicy: Always
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${PROJECT_NAME}
        from:
          kind: ImageStreamTag
          name: ${PROJECT_NAME}:latest
      type: ImageChange

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${PROJECT_NAME}
    name: ${PROJECT_NAME}
  spec:
    ports:
    - name: web
      port: 443
      protocol: TCP
      targetPort: ${DAEMON_PORT}
    selector:
      app: ${PROJECT_NAME}
      deploymentconfig: ${PROJECT_NAME}
    type: ClusterIP

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      router: private
    name: ${PROJECT_NAME}
  spec:
    port:
      targetPort: web
    to:
      name: ${PROJECT_NAME}
    tls:
      termination: Reencrypt
      insecureEdgeTerminationPolicy: Redirect


- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    generation: 1
    name: ${PROJECT_NAME}
  spec:
    lookupPolicy:
      local: false

- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${PROJECT_NAME}
    name: ${PROJECT_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${PROJECT_NAME}:latest
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: ${GIT_URL}
      sourceSecret:
        name: git-sshkey
      type: Git
    strategy:
      dockerStrategy:
      type: Docker
